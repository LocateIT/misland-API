version: '3.8'

services:
  app:
    image: gracemiswa/misland_api:v6
    ports:
      - "3000:3000"
    env_file:
      - prod.env
    command: start
    volumes:
      - ./misland_api:/opt/misland-api-api/misland_api
      - ./migrations:/opt/misland-api/migrations
      - ./data/scripts:/data/scripts
      - /var/run/docker.sock:/tmp/docker.sock
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    depends_on:
      - misland-api-database
      - misland-api-redis
    networks:
      - misland-network
    environment:
      - WAIT_HOSTS=misland-api-database:5432
      - WAIT_TIMEOUT=120
      - PORT=3000

  worker:
    image: gracemiswa/misland_api:v6
    env_file:
      - prod.env
    command: worker
    volumes:
      - ./misland_api:/opt/misland-api/misland_api
      - ./migrations:/opt/misland-api/migrations
      - /var/run/docker.sock:/tmp/docker.sock
      - ./data/scripts:/data/scripts
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    depends_on:
      - misland-api-database
      - misland-api-redis
    networks:
      - misland-network
    environment:
      - WAIT_HOSTS=misland-api-database:5432
      - WAIT_TIMEOUT=120
      - PORT=3000

  misland-api-database:
    image: postgres:12
    volumes:
      - postgres-data:/var/lib/postgresql/data
    env_file:
      - prod.env
    ports:
      - "5432:5432"
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    networks:
      - misland-network

  misland-api-registry:
    image: registry:2.7
    ports:
      - "5000:5000"
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    volumes:
      - registry-data:/var/lib/registry
    networks:
      - misland-network

  misland-api-redis:
    image: redis
    ports:
      - "6379:6379"
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    networks:
      - misland-network

volumes:
  postgres-data:
  registry-data:

networks:
  misland-network:
    driver: overlay
